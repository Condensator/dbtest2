@Library('dbmaestro')
import groovy.json.*

def dbMaestroParameters = \
              [ \
              jarPath: "C:\\Program Files (x86)\\DBmaestro\\TeamWork\\TeamWorkOracleServer\\Automation\\DBmaestroAgent.jar", \
              projectName: "Proxy_test123", \
              rsEnvName: "Release Source", \
              authType: "DBmaestroAccount", \
              userName: "sashao@dbmaestro.com", 
              authToken: "k1ix0lEEUPmxFI2Q1BlDwUy9wD78KaXU", \
              server: "localhost", \
              packageDir: "C:\\ScriptPath\\ScriptPath\\Default PG\\Proxy_test123\\AUTO_PACKAGE", 
              rsSchemaName: "PRX_RS", \
              packagePrefix: "V", \
              wsURL: "localhost:8016", \
              wsUserName: "sashao@dbmaestro.com", 
              wsPassword: "123456", \
              wsUseHttps: false,
              useZipPackaging: true, \
              archiveArtifact: true, \
              fileFilter: "Database\\*.sql", \
              packageHintPath: "Database\\package.json", \
              proxyPath: "http://localhost:89/Projects/1/packages", \
              driftDashboard: [[name: "Proxy_test123", environments: ["Release Source", "QA_Env_1", "Prod_Env_1"]]
              ]]

pipeline {
              agent any
              stages {
              stage('Generate Drift report') {
                                           steps {
                                                          script {
                                                                        dbmaestro.parameters = dbMaestroParameters
                                                                        dbmaestro.generateDriftDashboard()
                                                          }
                                           }
                              }
                              /*/*
                              stage('Generate Drift report') {
                                           steps {
                                                          script {
                                                                        dbmaestro.parameters = dbMaestroParameters
                                                                        dbmaestro.generateDriftDashboard()
                                                          }
                                           }
                              }
                              stage('Generate Drift report') {
                                           steps {
                                                          script {
                                                                        dbmaestro.parameters = dbMaestroParameters
                                                                        dbmaestro.testGetPlugins()
                                                          }
                                           }
                              }
                              stage('Package Preparation') {
                                           steps {
                                                          script {
                                                                        dbmaestro.parameters = dbMaestroParameters
                                                                        dbmaestro.prepPackageFromGitCommit()
                                                          }
                                           }
                             }
                             stage('Upload package files') {
                                           steps {
                                                          script {
                                                                        dbmaestro.parameters = dbMaestroParameters
                                                                        dbmaestro.uploadByProxy()
                                                          }
                                           }
                              }
                              stage('DBmaestro package command') {
                                           steps {
                                                          script {
                                                                        dbmaestro.parameters = dbMaestroParameters
                                                                        dbmaestro.runPackageCommand()
                                                          }
                                           }
                              }
                             stage('Package Creation') {
                                           steps {
                                                          script {
                                                                        dbmaestro.parameters = dbMaestroParameters
                                                                        dbmaestro.createPackage()
                                                          }
                                           }
                             }
                             
                             stage('Upgrade Release Source') {
                                           steps {
                                                          script {
                                                                        dbmaestro.parameters = dbMaestroParameters
                                                                        dbmaestro.upgradeReleaseSource()
                                                          }
                                           }
                             }
                             stage('lib testing') {
                                           steps {
                                                          script {
                                                                        dbmaestro.parameters = dbMaestroParameters
                                                                        dbmaestro.composePackage()
                                                          }
                                           }
                             }
                             */
              }
}
